"""
Django settings for server project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from datetime import timedelta
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure--k=843y-euzszl#0w5pr3yn*(9+*&_^97ik8t%3lc*29js-7a1"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # Django setting
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # third part setting
    "rest_framework",
    "rest_framework.authtoken",
    "django_extensions",
    "django_filters",
    "drf_spectacular",
    "djoser",
    "rest_framework_simplejwt",  # JWT
    "rest_framework_simplejwt.token_blacklist",  # JWT 黑名單
    "corsheaders",
    # local APPS
    "server.apps.management",  # 新增這app放在這路徑
    "server.apps.playground",  # 新增這app放在這路徑
    "server.apps.todo",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "server.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "server.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# 客制化 -> 剛建置專案時就要做，因為
AUTH_USER_MODEL = "management.User"  # 在 app的名字,model的名稱

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Taipei"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# 使用者無法自己設定每個分頁的資料數量就會寫在這

REST_FRAMEWORK = {
    "PAGE_SIZE": 2,
    "DEFAULT_PAGINATION_CLASS": "server.utils.pagination.PageNumberWithSizePagination",
    "DEFAULT_FILTER_BACKENDS": [
        "django_filters.rest_framework.DjangoFilterBackend",
        "rest_framework.filters.OrderingFilter",
        "rest_framework.filters.SearchFilter",
    ],
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",  # 建立API文件資料
    # "DEFAULT_AUTHENTICATION_CLASSES": [
    #     "rest_framework.authentication.TokenAuthentication",
    # ],  # 建立TOKEN驗證(不會過期所以不會使用)
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ],  # 建立 JWT 會過期的token
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],  # 建立沒有TOKEN時以permissions 執行權限
}

# API文件
SPECTACULAR_SETTINGS = {
    "TITLE": "Django API",
    "DESCRIPTION": "My Django API",
    "VERSION": "1.0.0",
    "SERVE_INCLUDE_SCHEMA": False,  # 文件是否顯示 Schema
}

# TOKEN
# 要自動送出email 要去到
DJOSER = {
    "EMAIL_FRONTEND_PROTOCOL": "http",  # 前端的portal email 的網址
    "EMAIL_FRONTEND_DOMAIN": "localhost:3000",  # domain+port
    "EMAIL_FRONTEND_SITE_NAME": "My Website",  # 網站名稱叫什麼
    "SEND_ACTIVATION_EMAIL": True,  # 打開帳號啟用的功能
    "ACTIVATION_URL": "users/activate/{uid}/{token}",
    "PASSWORD_RESET_CONFIRM_URL": "users/password/reset/confirm/{uid}/{token}",  # 重製密碼要導向哪個頁面
    "USERNAME_RESET_CONFIRM_URL": "users/username/reset/confirm/{uid}/{token}",  # 重製使用者名稱要導向哪個頁面
    "PASSWORD_CHANGED_EMAIL_CONFIRMATION": True,  # 使用者更換email的時候要通知
}

# JWT

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(
        minutes=5
    ),  # ACCESS_TOKEN 生命週期 要訪問資源可以用的TOKEN權限 每次請求都用來認證用戶
    "REFRESH_TOKEN_LIFETIME": timedelta(
        days=1
    ),  # refreshToken的生命週期是一天 保持登入的狀態 (可以保持登入但未必能打資料) 用來換新的 Access Token
    "ROTATE_REFRESH_TOKENS": True,  # 假設使用者無論有沒有在使用 一天後就要登出-->FALSE ；
    "BLACKLIST_AFTER_ROTATION": True,
    "UPDATE_LAST_LOGIN": True,  # REFRESH TOKEN有沒有要更新最後的登入時間
}


# TOKEN EMAIL SETTING (要串server才能寄信，所以dev情況下不會寄信)
EMAIL_BACKEND = (
    "django.core.mail.backends.filebased.EmailBackend"  # 因為不能寄信所以用dev設定
)

EMAIL_FILE_PATH = BASE_DIR / "emails"  # 將信件改為一隻檔案存在

# CORS 跨域請求
CORS_ALLOWED_ORIGIN_REGEXES = True

# # 如果有指定列表
# CORS_ALLOWED_ORIGIN_REGEXES = False
# CORS_ALLOWED_ORIGINS = [
#     "https://example.com",
#     "https://sub.example.com",
#     "http://localhost:8080",
#     "http://127.0.0.1:9000",
# ]
